<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Uni.Scan.Server</name>
    </assembly>
    <members>
        <member name="T:Uni.Scan.Server.Controllers.BaseApiController`1">
            <summary>
            Abstract BaseApi Controller Class
            </summary>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.AccountController.UpdateProfile(Uni.Scan.Transfer.Requests.Identity.UpdateProfileRequest)">
            <summary>
            Update Profile
            </summary>
            <param name="model"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.AccountController.ChangePassword(Uni.Scan.Transfer.Requests.Identity.ChangePasswordRequest)">
            <summary>
            Change Password
            </summary>
            <param name="model"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.AccountController.GetProfilePictureAsync(System.String)">
            <summary>
            Get Profile picture by Id
            </summary>
            <param name="userId"></param>
            <returns>ProcessingStatusCode 200 OK </returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.AccountController.UpdateProfilePictureAsync(Uni.Scan.Transfer.Requests.Identity.UpdateProfilePictureRequest)">
            <summary>
            Update Profile Picture
            </summary>
            <param name="request"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.TokenController.Get(Uni.Scan.Transfer.Requests.Identity.TokenRequest)">
            <summary>
            Get Token (Email, Password)
            </summary>
            <param name="model"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.TokenController.Refresh(Uni.Scan.Transfer.Requests.Identity.RefreshTokenRequest)">
            <summary>
            Refresh Token
            </summary>
            <param name="model"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.UserController.GetAll">
            <summary>
            Get User Details
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.UserController.GetById(System.String)">
            <summary>
            Get User By Id
            </summary>
            <param name="id"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.UserController.GetRolesAsync(System.String)">
            <summary>
            Get User Roles By Id
            </summary>
            <param name="id"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.UserController.UpdateRolesAsync(Uni.Scan.Transfer.Requests.Identity.UpdateUserRolesRequest)">
            <summary>
            Update Roles for User
            </summary>
            <param name="request"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.UserController.RegisterAsync(Uni.Scan.Transfer.Requests.Identity.RegisterRequest)">
            <summary>
            Register a User
            </summary>
            <param name="request"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.UserController.ConfirmEmailAsync(System.String,System.String)">
            <summary>
            Confirm Email
            </summary>
            <param name="userId"></param>
            <param name="code"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.UserController.ToggleUserStatusAsync(Uni.Scan.Transfer.Requests.Identity.ToggleUserStatusRequest)">
            <summary>
            Toggle User ProcessingStatusCode (Activate and Deactivate)
            </summary>
            <param name="request"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.UserController.ForgotPasswordAsync(Uni.Scan.Transfer.Requests.Identity.ForgotPasswordRequest)">
            <summary>
            Forgot Password
            </summary>
            <param name="request"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.UserController.ResetPasswordAsync(Uni.Scan.Transfer.Requests.Identity.ResetPasswordRequest)">
            <summary>
            Reset Password
            </summary>
            <param name="request"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.UserController.UpdateUserAsync(Uni.Scan.Transfer.Requests.Identity.UpdateUserRequest)">
            <summary>
            Update User
            </summary>
            <param name="request"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Identity.UserController.Export(System.String)">
            <summary>
            Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.RoleClaimController.GetAll">
            <summary>
            Get All Role Claims(e.g. User Create Permission)
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.RoleClaimController.GetAllByRoleId(System.String)">
            <summary>
            Get All Role Claims By Id
            </summary>
            <param name="roleId"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.RoleClaimController.Post(Uni.Scan.Transfer.Requests.Identity.RoleClaimRequest)">
            <summary>
            Add a Role Claim
            </summary>
            <param name="request"></param>
            <returns>ProcessingStatusCode 200 OK </returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.RoleClaimController.Delete(System.Int32)">
            <summary>
            Delete a Role Claim
            </summary>
            <param name="id"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.RoleController.GetAll">
            <summary>
            Get All Roles (basic, admin etc.)
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.RoleController.Post(Uni.Scan.Transfer.Requests.Identity.RoleRequest)">
            <summary>
            Add a Role
            </summary>
            <param name="request"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.RoleController.Delete(System.String)">
            <summary>
            Delete a Role
            </summary>
            <param name="id"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.RoleController.GetPermissionsByRoleId(System.String)">
            <summary>
            Get Permissions By Role Id
            </summary>
            <param name="roleId"></param>
            <returns>ProcessingStatusCode 200 Ok</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.RoleController.Update(Uni.Scan.Transfer.Requests.Identity.PermissionRequest)">
            <summary>
            Edit a Role Claim
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LabelTemplateController.GetAllAsync">
            <summary>
            Get Parametre
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LabelTemplateController.SaveAsync(Uni.Scan.Transfer.DataModel.LabelTemplateDTO)">
            <summary>
            Save Parametre
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LabelTemplateController.DeleteAsync(System.Int32)">
            <summary>
            Delete Parametre
            </summary>
            <param name="id"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
            
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticParametreController.GetAllAsync">
            <summary>
            Get All
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticParametreController.GetByIdAsync(System.Int32)">
            <summary>
            Get by ID
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
            
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticParametreController.SaveAsync(Uni.Scan.Transfer.DataModel.LogisticParametresDTO)">
            <summary>
            Save
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticParametreController.DeleteAsync(System.Int32)">
            <summary>
            Delete
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
            
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticTaskLabelController.GetAll">
            <summary>
            Get All Labels
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticTaskLabelController.GetAllTaskLabelAsync(System.String)">
            <summary>
            Get All Labels
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticTaskLabelController.Delete(System.Int32)">
            <summary>
            Delete Label
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticTaskLabelController.GetTaskLabel(System.String)">
            <summary>
            Get  Labels by ID
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
            
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticTaskLabelController.SaveTaskLabels(System.Collections.Generic.List{Uni.Scan.Transfer.DataModel.LogisticTaskLabelDTO})">
            <summary>
            Save Label
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
            
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticTaskLabelController.SaveSingleLabel(Uni.Scan.Transfer.DataModel.LogisticTaskLabelDTO)">
            <summary>
            Save single Label
            </summary>
            <returns></returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticTaskLabelController.GetByIdAsync(System.Int32)">
            <summary>
            Get by ID
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
            
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.LogisticTaskLabelController.SendLabelsAsync(System.Collections.Generic.List{Uni.Scan.Transfer.DataModel.LogisticTaskLabelDTO})">
            <summary>
            Send Labels 
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
            
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.ScanningCodeController.GetAllAsync">
            <summary>
            Get All
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.ScanningCodeController.GetByIdAsync(System.Int32)">
            <summary>
            Get by ID
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
            
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.ScanningCodeController.SaveCodeAsync(Uni.Scan.Transfer.DataModel.ScanningCodeDTO)">
            <summary>
            Save
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.ScanningCodeController.UpdateCodeAsync(System.Collections.Generic.List{Uni.Scan.Transfer.DataModel.ScanningCodeDTO})">
            <summary>
            Update
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.ScanningCodeController.SaveAllCodesAsync(System.Collections.Generic.List{Uni.Scan.Transfer.DataModel.ScanningCodeDTO})">
            <summary>
            Save All
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Logistics.ScanningCodeController.DeleteAsync(System.Int32)">
            <summary>
            Delete
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
            
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Stock.StockAnomalyController.GetAllAsync">
            <summary>
            Get All Anomalies
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Stock.StockAnomalyController.GetByIdAsync(System.Int32)">
            <summary>
            Get Anomaly by ID
            </summary>
            <param name="id"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Stock.StockAnomalyController.SaveAsync(Uni.Scan.Transfer.DataModel.StockAnomalyDTO)">
            <summary>
            Save Anomaly
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Stock.StockAnomalyController.UpdateAsync(Uni.Scan.Transfer.DataModel.StockAnomalyDTO)">
            <summary>
            Update Anomaly
            </summary>
            <param name="Id"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
            
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Stock.StockAnomalyController.ValidateAsync(Uni.Scan.Transfer.DataModel.StockAnomalyDTO)">
            <summary>
            Validate Anomaly
            </summary>
            <param name="request"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Stock.StockAnomalyController.RejectAsync(Uni.Scan.Transfer.DataModel.StockAnomalyDTO)">
            <summary>
            Reject Anomaly
            </summary>
            <param name="request"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Stock.StockAnomalyController.CancelAsync(System.Int32)">
            <summary>
            Cancel Anomaly
            </summary>
            <param name="id"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Stock.StockAnomalyController.DeleteAsync(System.Int32)">
            <summary>
            Delete Anomaly
            </summary>
            <param name="id"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Utilities.AuditsController.GetUserTrailsAsync">
            <summary>
            Get Current User Audit Trails
            </summary>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Utilities.AuditsController.ExportExcel(System.String,System.Boolean,System.Boolean)">
            <summary>
            Search Audit Trails and Export to Excel
            </summary>
            <param name="searchString"></param>
            <param name="searchInOldValues"></param>
            <param name="searchInNewValues"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
        <member name="M:Uni.Scan.Server.Controllers.Utilities.PreferencesController.ChangeLanguageAsync(System.String)">
            <summary>
            Change Language Preference
            </summary>
            <param name="languageCode"></param>
            <returns>ProcessingStatusCode 200 OK</returns>
        </member>
    </members>
</doc>
