// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Uni.Scan.Infrastructure.ByDesign.BydResponses;
//
//    var bydStockOverViewResponse = BydStockOverViewResponse.FromJson(jsonString);

namespace Uni.Scan.Infrastructure.ByDesign.BydResponses
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class BydStockOverViewResponse
    {
        [JsonProperty("d", NullValueHandling = NullValueHandling.Ignore)]
        public BydStockOverViewResponseRoot D { get; set; }
    }

    public partial class BydStockOverViewResponseRoot
    {
        [JsonProperty("results", NullValueHandling = NullValueHandling.Ignore)]
        public List<BydStockOverViewResponseItem> Results { get; set; }
    }

    public partial class BydStockOverViewResponseItem
    {
        [JsonProperty("CCONSIGNMENT_IND", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CconsignmentInd { get; set; }

        [JsonProperty("CCO_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string CcoUuid { get; set; }

        [JsonProperty("CDISPLAY_UOM", NullValueHandling = NullValueHandling.Ignore)]
        public string CdisplayUom { get; set; }

        [JsonProperty("CEXP_DATE", NullValueHandling = NullValueHandling.Ignore)]
        public string CexpDate { get; set; }

        [JsonProperty("CEXP_DT", NullValueHandling = NullValueHandling.Ignore)]
        public string CexpDt { get; set; }

        [JsonProperty("CIML_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string CimlUuid { get; set; }

        [JsonProperty("CINSPECTION_IND", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CinspectionInd { get; set; }

        [JsonProperty("CINV_STOCK_STATUS_CODE", NullValueHandling = NullValueHandling.Ignore)]
        public string CinvStockStatusCode { get; set; }

        [JsonProperty("CINV_TYPE", NullValueHandling = NullValueHandling.Ignore)]
        public string CinvType { get; set; }

        [JsonProperty("CISTOCK_TYPE", NullValueHandling = NullValueHandling.Ignore)]
        public string CistockType { get; set; }

        [JsonProperty("CISTOCK_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string CistockUuid { get; set; }

        [JsonProperty("CLOG_AREA_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string ClogAreaUuid { get; set; }

        [JsonProperty("CLU_QUANTITY_UOM", NullValueHandling = NullValueHandling.Ignore)]
        public string CluQuantityUom { get; set; }

        [JsonProperty("CLU_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string CluUuid { get; set; }

        [JsonProperty("CMATERIAL_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string CmaterialUuid { get; set; }

        [JsonProperty("CON_HAND_STOCK_UOM", NullValueHandling = NullValueHandling.Ignore)]
        public string ConHandStockUom { get; set; }

        [JsonProperty("COWNER_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string CownerUuid { get; set; }

        [JsonProperty("CPROD_CAT_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string CprodCatUuid { get; set; }

        [JsonProperty("CPRS_VER_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string CprsVerUuid { get; set; }

        [JsonProperty("CRESTRICTED_IND", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CrestrictedInd { get; set; }

        [JsonProperty("CSALES_ORDER_ID", NullValueHandling = NullValueHandling.Ignore)]
        public string CsalesOrderId { get; set; }

        [JsonProperty("CSITE_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string CsiteUuid { get; set; }

        [JsonProperty("FCALTERNATIVE_QUANTITY", NullValueHandling = NullValueHandling.Ignore)]
        public string FcalternativeQuantity { get; set; }

        [JsonProperty("FCLU_QUANTITY", NullValueHandling = NullValueHandling.Ignore)]
        public string FcluQuantity { get; set; }

        [JsonProperty("FCON_HAND_STOCK", NullValueHandling = NullValueHandling.Ignore)]
        public string FconHandStock { get; set; }

        [JsonProperty("FCQUALITY_STOCK", NullValueHandling = NullValueHandling.Ignore)]
        public string FcqualityStock { get; set; }

        [JsonProperty("FCRESTRICTED_STOCK", NullValueHandling = NullValueHandling.Ignore)]
        public string FcrestrictedStock { get; set; }

        [JsonProperty("FCTIME_TO_EXPIRE", NullValueHandling = NullValueHandling.Ignore)]
        public string FctimeToExpire { get; set; }

        [JsonProperty("FCUN_RESTRICTED_STOCK", NullValueHandling = NullValueHandling.Ignore)]
        public string FcunRestrictedStock { get; set; }

        [JsonProperty("FCZ0COUNT", NullValueHandling = NullValueHandling.Ignore)]
        public string Fcz0Count { get; set; }

        [JsonProperty("KCALTERNATIVE_QUANTITY", NullValueHandling = NullValueHandling.Ignore)]
        public string KcalternativeQuantity { get; set; }

        [JsonProperty("KCLU_QUANTITY", NullValueHandling = NullValueHandling.Ignore)]
        public string KcluQuantity { get; set; }

        [JsonProperty("KCON_HAND_STOCK", NullValueHandling = NullValueHandling.Ignore)]
        public string KconHandStock { get; set; }

        [JsonProperty("KCQUALITY_STOCK", NullValueHandling = NullValueHandling.Ignore)]
        public string KcqualityStock { get; set; }

        [JsonProperty("KCRESTRICTED_STOCK", NullValueHandling = NullValueHandling.Ignore)]
        public string KcrestrictedStock { get; set; }

        [JsonProperty("KCTIME_TO_EXPIRE", NullValueHandling = NullValueHandling.Ignore)]
        public string KctimeToExpire { get; set; }

        [JsonProperty("KCUN_RESTRICTED_STOCK", NullValueHandling = NullValueHandling.Ignore)]
        public string KcunRestrictedStock { get; set; }

        [JsonProperty("KCZ0COUNT", NullValueHandling = NullValueHandling.Ignore)]
        public long? Kcz0Count { get; set; }

        [JsonProperty("TCO_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string TcoUuid { get; set; }

        [JsonProperty("TDISPLAY_UOM", NullValueHandling = NullValueHandling.Ignore)]
        public string TdisplayUom { get; set; }

        [JsonProperty("TIML_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string TimlUuid { get; set; }

        [JsonProperty("TINV_STOCK_STATUS_CODE", NullValueHandling = NullValueHandling.Ignore)]
        public string TinvStockStatusCode { get; set; }

        [JsonProperty("TINV_TYPE", NullValueHandling = NullValueHandling.Ignore)]
        public string TinvType { get; set; }

        [JsonProperty("TISTOCK_TYPE", NullValueHandling = NullValueHandling.Ignore)]
        public string TistockType { get; set; }

        [JsonProperty("TISTOCK_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string TistockUuid { get; set; }

        [JsonProperty("TLOG_AREA_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string TlogAreaUuid { get; set; }

        [JsonProperty("TLU_QUANTITY_UOM", NullValueHandling = NullValueHandling.Ignore)]
        public string TluQuantityUom { get; set; }

        [JsonProperty("TLU_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string TluUuid { get; set; }

        [JsonProperty("TMATERIAL_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string TmaterialUuid { get; set; }

        [JsonProperty("TON_HAND_STOCK_UOM", NullValueHandling = NullValueHandling.Ignore)]
        public string TonHandStockUom { get; set; }

        [JsonProperty("TOWNER_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string TownerUuid { get; set; }

        [JsonProperty("TPROD_CAT_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string TprodCatUuid { get; set; }

        [JsonProperty("TPRS_VER_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string TprsVerUuid { get; set; }

        [JsonProperty("TSITE_UUID", NullValueHandling = NullValueHandling.Ignore)]
        public string TsiteUuid { get; set; }
    }

    public partial class BydStockOverViewResponse
    {
        public static BydStockOverViewResponse FromJson(string json) => JsonConvert.DeserializeObject<BydStockOverViewResponse>(json, Uni.Scan.Infrastructure.ByDesign.BydResponses.Converter.Settings);
    }


    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
